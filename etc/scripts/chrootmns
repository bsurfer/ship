#!/usr/bin/env python
###########################
'''
author: Beto
email: bsurfer [at] gmail [dot] com
description: This script it's used to do the chroot management, i.e., start,stop,create,connect ship's
The default folder used to chroot it's: /storage/chroot/farm/, you can change it in /etc/chroot/config/chroot.cfg
You must be root to do that
'''
###########################
import os
import sys
import ipaddr
import socket
import subprocess
import time
import random
import sh
import signal
import shutil
from config import Config

#Read config values
f = file('/etc/chroot/config/chroot.cfg')
cfg = Config(f)
farm_folder=cfg.farm_folder
config_folder=cfg.config_folder

def valid_ip(ip):
        try:
                socket.inet_aton(ip)
                return True
        except socket.error:
                return False

def ping_ip(ip):
	try:
        	sh.ping(ip, "-c 1", _out="/dev/null")
		return True
	except sh.ErrorReturnCode_1:
		return False

def check_ip(ip):
        if valid_ip(ip) is True and ping_ip(ip) is False:
                return True
        else:
                return False

def list_chroots():
	return os.listdir(farm_folder)

def copy_file(src, dest):
	try:
		shutil.copy(src, dest)
		# eg. src and dest are the same file
	except shutil.Error as e:
		print('Error: %s' % e)
		# eg. source or destination doesn't exist
	except IOError as e:
		print('Error: %s' % e.strerror)

def father_hostname(chroot):
	src='/etc/hostname'
	dest='%s%s/etc/hostname.father' %(farm_folder,chroot)
	copy_file(src, dest)

def get_ip_chroot(path):
	if os.path.isfile('%s%s/etc/network/interfaces' %(farm_folder,path)):
		get_ip=("cat %s%s/etc/network/interfaces  | grep addr |awk '{print $2}' | head -n1" ) %(farm_folder,path)
		ip = os.popen(get_ip).readlines()
		ips = str(ip[0][:-1])
		return ips

def validate_stop(ip):
    if check_ip(str(ip)) is False:
        return ip
    else:
        return None

def validate_start(ip):
    if check_ip(str(ip)) is True:
        #can be created
        return ip
    else:
        return None

def path_pid():
	path='/var/run/chroot'
	if not os.path.exists(path):
		os.makedirs(path)

def get_pid(value):
	try:
		pid_file = '/var/run/chroot/%s.pid' %value 
		open_file = open(pid_file)
		return open_file.readline().rstrip()
	except (IOError, OSError) as e:
		return False
	
def create_pid(pid,chroot):
	os.system('echo %s > /var/run/chroot/%s.pid'  %(pid,chroot) )

def delete_pid(chroot):
	files='/var/run/chroot/%s.pid' %(chroot)
	os.remove(files)

def get_start_pid(pid):
	 cmd=('ps -o pid --ppid %s | tail -1') %pid
	 pi = os.popen(cmd).readlines()
	 return pi[0].rstrip()

def chroot_exist(name):
	if name in list_chroots():
		return True
	else:
		return False

def status_all():
	for chroot in list_chroots():
		status_chroot(chroot)

def start_all():
	for chroot in list_chroots():
		start_chroot(chroot)

def stop_all():
	for chroot in list_chroots():
		stop_chroot(chroot)

def status_chroot(value):
    	status=False
	if not chroot_exist(value) and get_pid(value):
		return False
	
	cmd=("ps -ef | grep %s%s | grep -v grep | grep -v nsenter| awk '{print $2}'") %(farm_folder,value)
        pid = os.popen(cmd).readline().rstrip()
	if len(pid) < 1:
		print 'Ship: %s - STOPED' %value
		return False
	else:
		cmd=('ps -o pid --ppid %s | tail -1') %pid
		if os.popen(cmd).readline().rstrip().strip() == get_pid(value):
			print 'Ship: '+value+' - STARTED'
			return True
		else:
			print 'Ship: %s - STOPED' %value
			return False

def start_chroot(value):
	if not chroot_exist(value):
		return False
	path_pid()	
	if os.path.isfile('%s%s/etc/init.d/start_chroot' %(farm_folder,value)):
		if status_chroot(value) is True:
			print 'Nothing to do!!'
		else:
			start_network(value)
			if get_interfaces(value) is '2':
				create_network_wan(value)
			father_hostname(value)
			cmd=('setsid %sbin/unshare -m -p -u -n -f chroot %s%s /etc/init.d/start_chroot ') %(config_folder,farm_folder,value)
			print 'Launch Chroot'
			p_pid = subprocess.Popen(['/bin/bash', '-c', cmd]).pid
			time.sleep(1)
			pid = get_start_pid(p_pid)
			create_pid(pid,value)
			create_network_stage2(pid,value)
			if get_interfaces(value) is '2':
				create_network_stage2_wan(pid,value)
	else:
		print 'The file %s%s/etc/init.d/start_chroot do not exist!!!!' %(farm_folder,value)

def stop_chroot(value='all'):
	if not chroot_exist(value):
		return False
	
	if os.path.isfile('%s%s/etc/init.d/start_chroot' %(farm_folder,value)):
		if status_chroot(value) is True:
			pid=int(get_pid(value))
			print 'Shutdown: %s Pid: %s' %(value,pid)
			os.kill(pid, signal.SIGTERM)
			delete_pid(value)
		else:
			print 'Ship %s is STOPED' %value
	else:
		print 'The file %s%s/etc/init.d/start_chroot do not exist!!!' %(farm_folder,value)

def start_network(value='all'):
	ip=validate_start(get_ip_chroot(value))
	if ip is not None:
		print 'Ship: %s - IP: %s ' %(value,ip)
		create_network(value)
	else:
		print 'IP not valid or already exist' 
		sys.exit()

def create_network(chroot):
        print 'Create Network'
	os.system('ip link delete %s'  %(chroot) )
        os.system('ip link add %s type veth peer name veth0' %chroot)
        os.system('ovs-vsctl del-port ovsbr %s; ovs-vsctl add-port ovsbr %s'  %(chroot,chroot) )
        os.system('ifconfig %s promisc' %chroot)

def create_network_stage2(pid,interface):
        print 'Put interfaces %s UP!!! PID: %s' %(interface,pid)
        os.system('ip link set netns %s veth0' %pid)
        os.system('ifconfig %s promisc'  %interface)
        os.system('ifconfig %s up'  %interface)

def create_network_wan(chroot):
	print 'Create Network'
	os.system('ip link delete %swan'  %(chroot) )
	os.system('ip link add %swan type veth peer name veth1' %chroot )
	os.system('ovs-vsctl del-port wanbr %swan; ovs-vsctl add-port wanbr %swan' %(chroot,chroot))
	os.system('ifconfig %swan promisc' %chroot)

def create_network_stage2_wan(pid,chroot):
	print 'Put interfaces wan UP!!! PID: %s' %(pid)
	os.system('ip link set netns %s veth1' %pid)
	os.system('ifconfig %swan promisc' %chroot)
	os.system('ifconfig %swan up' %chroot )

def connect(name):
	if get_pid(name) is not False:
		cmd=('%sbin/nsenter -t %s  -m -u -p -n chroot %s%s ') %(config_folder,get_pid(name),farm_folder,name)
		os.system(cmd)
	else:
		print 'Ship not started'

def get_interfaces(path):
    if os.path.isfile('%s%s/etc/network/interfaces' %(farm_folder,path)):
        get_num=("cat  %s%s/etc/network/interfaces  | grep addr |awk '{print $2}' | wc -l" ) %(farm_folder,path)
        num = os.popen(get_num).readlines()
        num = str(num[0][:-1])
        return num	

def create_chroot(chroot_name):
	os.system('apt-get install binutils debootstrap')
	os.system('mkdir -p %s%s' %(farm_folder,chroot_name))
	os.system('apt-get install binutils debootstrap')
	os.system('debootstrap --arch  amd64 wheezy %s%s http://http.debian.net/debian' %(farm_folder,chroot_name))
	os.system('chroot %s%s apt-get install  vim tzdata ssh locales less nmap sudo ntp python-ipaddr uml-utilities' %(farm_folder,chroot_name))
	os.system('chroot %s%s dpkg-reconfigure tzdata' %(farm_folder,chroot_name))
	os.system('chroot %s%s dpkg-reconfigure locales' %(farm_folder,chroot_name))
	#setup chroot
	setup_chroot(chroot_name)

def setup_chroot(chroot_name):
	infile='%s/config_files/interfaces_ovs' %(config_folder)
	outfile='%s%s/etc/network/interfaces' %(farm_folder,chroot_name)
	fstabfile='%s%s/etc/fstab' %(farm_folder,chroot_name)
	mtabfile='%s%s/etc/mtab' %(farm_folder,chroot_name)
	hostfile='%s%s/etc/hostname' %(farm_folder,chroot_name)
	hostsfile='%s%s/etc/hosts' %(farm_folder,chroot_name)
	copy_file(infile,outfile)
	#hosts
	write_files(hostsfile,'10.10.10.30		me','ab')
	#hostname
	write_files(hostfile,chroot_name,'wb')
	#mtab
	write_files(mtabfile,'rootfs / rootfs rw 0 0','wb')
	#fstab
	text=("proc     /proc        proc    defaults     0       0\n"
		"none /sys sysfs defaults 0 0\n"
		"none    /dev/pts    devpts    defaults    0    0\n"
	)
	write_files(fstabfile,text,'wb')
	src='%s/config_files/start_chroot' %(config_folder)
	dest='%s%s/etc/init.d/start_chroot' %(farm_folder,chroot_name)
	copy_file(src,dest)
	os.chmod(dest,0755)

def write_files(filename,text,mode):
	f1 = open(filename,mode)
	f1.write(text)
	f1.close()


def exit():
    sys.exit('Usage: %s  start all | start ship_name | stop all | stop ship_name | status | con ship_name' % sys.argv[0])


if len(sys.argv) > 1 and len(sys.argv) < 4:
    if len(sys.argv) == 3 and sys.argv[1]=='start' and sys.argv[2]=='all':
        print 'Start all'
	start_all()
    elif len(sys.argv) == 3 and sys.argv[1]=='stop' and sys.argv[2]=='all':
        print 'Stop all'
	stop_all()
    elif len(sys.argv) == 3 and sys.argv[1]=='start':
        ch=sys.argv[2]
        print 'Start %s' %ch
        start_chroot(ch)
    elif len(sys.argv) == 3 and sys.argv[1]=='stop':
        ch=sys.argv[2]
        print 'Stop %s' %ch
        stop_chroot(ch) 
    elif len(sys.argv) == 2 and sys.argv[1]=='status':
        print 'Status all'
        status_all() 
    elif len(sys.argv) == 3 and sys.argv[1]=='con':
        ch=sys.argv[2]
        print 'Connect %s' %ch
        connect(ch) 
    elif len(sys.argv) == 3 and sys.argv[1]=='create':
        ch=sys.argv[2]
        print 'Create chroot %s' %ch
        create_chroot(ch) 
    else:
        exit()

else:
    exit()

